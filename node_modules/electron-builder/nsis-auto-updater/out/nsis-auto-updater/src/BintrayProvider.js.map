{
  "version": 3,
  "file": "BintrayProvider.js",
  "sourceRoot": "",
  "sources": [
    "../../../src/BintrayProvider.ts"
  ],
  "names": [],
  "mappings": ";;AACA,0BAA8C,AAA2B,AACzE,AAAC;AAAD,iCAA0B,AAAkC,AAG5D,AAAC;AADD,AAAmC;AACnC,MAAM,AAAS,YAAG,AAAO,QAAC,AAAwB,AAAC;AAEnD;AAGE,gBAAY,AAA6B;AACvC,AAAI,aAAC,AAAM,SAAG,IAAI,UAAa,cAAC,AAAa,cAAC,AAAI,MAAE,AAAa,cAAC,AAAO,SAAE,AAAa,cAAC,AAAI,AAAC,AAChG;AAAC;AAEK,AAAgB;;AACpB,gBAAI,AAAC;AACH,sBAAM,AAAI,OAAG,MAAM,AAAI,KAAC,AAAM,OAAC,AAAU,WAAC,AAAS,AAAC;AACpD,AAAM;AACJ,AAAO,6BAAE,AAAI,KAAC,AAAI,AACnB,AACH;AAHS;AAIT,cAAA,AAAK,AAAC,OAAC,AAAC,AAAC,GAAC,AAAC;AACT,AAAE,AAAC,oBAAC,AAAC,aAAY,iBAAS,aAAI,AAAC,EAAC,AAAQ,SAAC,AAAU,eAAK,AAAG,AAAC,KAAC,AAAC;AAC5D,0BAAM,IAAI,AAAK,AAAC,yIAAkI,AAAC,EAAC,AAAK,SAAI,AAAC,EAAC,AAAO,OAAE,AAAC,AAC3K;AAAC;AACD,sBAAM,AAAC,AACT;AAAC,AACH;AAAC;AAAA;AAEK,AAAa,kBAAC,AAAwB;;AAC1C,gBAAI,AAAC;AACH,sBAAM,AAAK,QAAG,MAAM,AAAI,KAAC,AAAM,OAAC,AAAe,gBAAC,AAAW,YAAC,AAAO,AAAC;AACpE,sBAAM,AAAM,AAAG,aAAG,AAAW,YAAC,AAAO,OAAM;AAC3C,AAAG,AAAC,qBAAC,IAAI,AAAI,QAAI,AAAK,AAAC,OAAC,AAAC;AACvB,AAAE,AAAC,wBAAC,AAAI,KAAC,AAAI,KAAC,AAAQ,SAAC,AAAM,AAAC,WAAI,AAAI,KAAC,AAAI,KAAC,AAAQ,QAAC,AAAO,AAAC,AAAC,iBAAC,AAAC;AAC9D,AAAM;AACJ,AAAI,kCAAE,AAAI,KAAC,AAAI;AACf,AAAG,AAAE,4DAA0B,AAAI,KAAC,AAAM,OAAC,AAAI,UAAI,AAAI,KAAC,AAAM,OAAC,AAAI,UAAI,AAAI,KAAC,AAAI,IAAE,AACnF,AACH;AAJS;AAIR,AACH;AAAC;AAED,AAAuC;AACvC,sBAAM,IAAI,AAAK,AAAC,gDAAyC,AAAW,YAAC,AAAO,iBAAQ,AAAI,KAAC,AAAS,UAAC,AAAK,OAAE,AAAI,MAAE,AAAC,AAAC,EAAE,AAAC,AACvH;AACA,cAAA,AAAK,AAAC,OAAC,AAAC,AAAC,GAAC,AAAC;AACT,AAAE,AAAC,oBAAC,AAAC,aAAY,iBAAS,aAAI,AAAC,EAAC,AAAQ,SAAC,AAAU,eAAK,AAAG,AAAC,KAAC,AAAC;AAC5D,0BAAM,IAAI,AAAK,AAAC,yIAAkI,AAAC,EAAC,AAAK,SAAI,AAAC,EAAC,AAAO,OAAE,AAAC,AAC3K;AAAC;AACD,sBAAM,AAAC,AACT;AAAC,AACH;AAAC;AAAA,AACH,AAAC;;AA7CY,QAAe,kBA6C3B",
  "sourcesContent": [
    "import { Provider, VersionInfo, FileInfo } from \"./api\"\nimport { BintrayClient, BintrayOptions } from \"../../src/publish/bintray\"\nimport { HttpError } from \"../../src/publish/restApiRequest\"\n\n//noinspection JSUnusedLocalSymbols\nconst __awaiter = require(\"../../src/util/awaiter\")\n\nexport class BintrayProvider implements Provider {\n  private client: BintrayClient\n\n  constructor(configuration: BintrayOptions) {\n    this.client = new BintrayClient(configuration.user, configuration.package, configuration.repo)\n  }\n\n  async getLatestVersion(): Promise<VersionInfo> {\n    try {\n      const data = await this.client.getVersion(\"_latest\")\n      return {\n        version: data.name,\n      }\n    }\n    catch (e) {\n      if (e instanceof HttpError && e.response.statusCode === 404) {\n        throw new Error(`No latest version, please ensure that user, package and repository correctly configured. Or at least one version is published. ${e.stack || e.message}`)\n      }\n      throw e\n    }\n  }\n\n  async getUpdateFile(versionInfo: VersionInfo): Promise<FileInfo> {\n    try {\n      const files = await this.client.getVersionFiles(versionInfo.version)\n      const suffix = `${versionInfo.version}.exe`\n      for (let file of files) {\n        if (file.name.endsWith(suffix) && file.name.includes(\"Setup\")) {\n          return {\n            name: file.name,\n            url: `https://dl.bintray.com/${this.client.user}/${this.client.repo}/${file.name}`,\n          }\n        }\n      }\n\n      //noinspection ExceptionCaughtLocallyJS\n      throw new Error(`Cannot find suitable file for version ${versionInfo.version} in: ${JSON.stringify(files, null, 2)}`)\n    }\n    catch (e) {\n      if (e instanceof HttpError && e.response.statusCode === 404) {\n        throw new Error(`No latest version, please ensure that user, package and repository correctly configured. Or at least one version is published. ${e.stack || e.message}`)\n      }\n      throw e\n    }\n  }\n}"
  ]
}
